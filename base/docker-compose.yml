services:
  # APIS
  q-api:
    image: cadeke/argo-q-api:latest
    container_name: query-api
    restart: always
    ports:
      - "8001:8080"
    depends_on:
      - postgres
      - memcached
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      MEMCACHED_HOST: memcached
      MEMCACHED_PORT: 11211
    networks:
      - argo-backend

  a-api:
    image: cadeke/argo-a-api:latest
    container_name: admin-api
    restart: always
    ports:
      - "8002:8080"
    depends_on:
      - postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    networks:
      - argo-backend

  # WEBSITES
  q-site:
    image: cadeke/argo-q-site:latest
    container_name: query-site
    restart: always
    ports:
      - "8003:80"
    depends_on:
      - q-api
    environment:
      VITE_API_HOST: query-api
      VITE_API_PORT: 8080
    networks:
      - argo-backend

  a-site:
    image: cadeke/argo-a-site:latest
    container_name: admin-site
    restart: always
    ports:
      - "8004:80"
    depends_on:
      - a-api
    environment:
      VITE_API_HOST: admin-api
      VITE_API_PORT: 8080
    networks:
      - argo-backend

  # APPS
  ot-app:
    image: cadeke/argo-ot-app:latest
    container_name: ot-app
    restart: always
    depends_on:
      - q-api
    environment:
      QUERY_HOST: q-api
      QUERY_PORT: 8080
    networks:
      - argo-backend

  # DATABASES
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./containers/pgdata:/var/lib/postgresql/data
    networks:
      - argo-backend

  memcached:
    image: memcached:latest
    container_name: memcached
    restart: always
    command: ["-m", "64"]
    ports:
      - "11211:11211"
    networks:
      - argo-backend

  # MONITORING
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./containers/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - q-api
    networks:
      - argo-backend

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./containers/grafana:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    depends_on:
      - prometheus
    networks:
      - argo-backend

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: always
    ports:
      - "8085:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - prometheus
    networks:
      - argo-backend

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    ports:
      - "9100:9100"
    networks:
      - argo-backend
    depends_on:
      - prometheus

  postgres-exporter:
    image: wrouesnel/postgres_exporter:latest
    container_name: postgres-exporter
    restart: always
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
    ports:
      - "9187:9187"
    networks:
      - argo-backend
    depends_on:
      - postgres
      - prometheus

  # CI/CD
  gitlab:
    image: gitlab/gitlab-ce:latest
    container_name: gitlab
    restart: always
    hostname: gitlab
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://localhost:8929'
        gitlab_rails['gitlab_shell_ssh_port'] = 2224
    ports:
      - "8929:8929"
      - "2224:22"
    volumes:
      - ./containers/gitlab/config:/etc/gitlab
      - ./containers/gitlab/logs:/var/log/gitlab
      - ./containers/gitlab/data:/var/opt/gitlab
    networks:
      - argo-backend

  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./containers/gitlab-runner/config:/etc/gitlab-runner
    depends_on:
      - gitlab
    networks:
      - argo-backend
    deploy:
      replicas: 2

volumes:
  pgdata:

networks:
  argo-backend:
    driver: bridge
